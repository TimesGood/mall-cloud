<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.generator.dao.GenTableColumnDao">

    <resultMap id="BaseResultMap" type="com.mall.generator.domain.GenTableColumn">
        <id column="column_id" jdbcType="BIGINT" property="columnId" />
        <result column="table_id" jdbcType="BIGINT" property="tableId" />
        <result column="column_name" jdbcType="VARCHAR" property="columnName" />
        <result column="column_comment" jdbcType="VARCHAR" property="columnComment" />
        <result column="column_type" jdbcType="VARCHAR" property="columnType" />
        <result column="java_type" jdbcType="VARCHAR" property="javaType" />
        <result column="java_field" jdbcType="VARCHAR" property="javaField" />
        <result column="is_pk" jdbcType="CHAR" property="isPk" />
        <result column="is_increment" jdbcType="CHAR" property="isIncrement" />
        <result column="is_required" jdbcType="CHAR" property="isRequired" />
        <result column="is_insert" jdbcType="CHAR" property="isInsert" />
        <result column="is_edit" jdbcType="CHAR" property="isEdit" />
        <result column="is_list" jdbcType="CHAR" property="isList" />
        <result column="is_query" jdbcType="CHAR" property="isQuery" />
        <result column="query_type" jdbcType="VARCHAR" property="queryType" />
        <result column="html_type" jdbcType="VARCHAR" property="htmlType" />
        <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <sql id="selectGenTableColumnVo">
        select column_id, table_id, column_name, column_comment, column_type, java_type, java_field, is_pk, is_increment, is_required, is_insert, is_edit, is_list, is_query, query_type, html_type, dict_type, sort, create_by, create_time, update_by, update_time from gen_table_column
    </sql>
    <select id="selectDbTableColumnsByName" parameterType="String" resultMap="BaseResultMap">
        <if test="@com.mall.mybatis.utils.DataBaseHelper@isMySql()">
            SELECT column_name,
            (case when (is_nullable = 'no' <![CDATA[ && ]]> column_key != 'PRI') then '1' else '0' end) as is_required,
            (case WHEN column_key = 'PRI' then '1' else '0' end) as is_pk,
            ordinal_position as sort,
            column_comment,
            (case WHEN extra = 'auto_increment' then '1' else '0' end) as is_increment,
            column_type
            FROM information_schema.columns where table_schema = (SELECT database()) and table_name = (#{tableName})
            order by ordinal_position
        </if>
        <if test="@com.mall.mybatis.utils.DataBaseHelper@isOracle()">
            SELECT lower(temp.column_name) as column_name,
            (case when (temp.nullable = 'N' and temp.constraint_type != 'P') then '1' else '0' end) as is_required,
            (case when temp.constraint_type = 'P' then '1' else '0' end) as is_pk,
            temp.column_id as sort,
            temp.comments as column_comment,
            (case when temp.constraint_type = 'P' then '1' else '0' end) as is_increment,
            lower(temp.data_type) as column_type
            from (
            select col.column_id, col.column_name,col.nullable, col.data_type, colc.comments, uc.constraint_type,
            row_number()
            over (partition by col.column_name order by uc.constraint_type desc) as row_flg
            from user_tab_columns col
            left join user_col_comments colc on colc.table_name = col.table_name and colc.column_name = col.column_name
            left join user_cons_columns ucc on ucc.table_name = col.table_name and ucc.column_name = col.column_name
            left join user_constraints uc on uc.constraint_name = ucc.constraint_name
            where col.table_name = upper(#{tableName})
            ) temp
            WHERE temp.row_flg = 1
            ORDER BY temp.column_id
        </if>
        <if test="@com.mall.mybatis.utils.DataBaseHelper@isPostgerSql()">
            SELECT column_name, is_required, is_pk, sort, column_comment, is_increment, column_type
            FROM (
            SELECT c.relname AS table_name,
            a.attname AS column_name,
            d.description AS column_comment,
            CASE WHEN a.attnotnull AND con.conname IS NULL THEN 1 ELSE 0
            END AS is_required,
            CASE WHEN con.conname IS NOT NULL THEN 1 ELSE 0
            END AS is_pk,
            a.attnum AS sort,
            CASE WHEN "position"(pg_get_expr(ad.adbin, ad.adrelid),
            ((c.relname::text || '_'::text) || a.attname::text) || '_seq'::text) > 0 THEN 1 ELSE 0
            END AS is_increment,
            btrim(
            CASE WHEN t.typelem <![CDATA[ <> ]]> 0::oid AND t.typlen = '-1'::integer THEN 'ARRAY'::text ELSE
            CASE WHEN t.typtype = 'd'::"char" THEN format_type(t.typbasetype, NULL::integer)
            ELSE format_type(a.atttypid, NULL::integer) END
            END, '"'::text
            ) AS column_type
            FROM pg_attribute a
            JOIN (pg_class c JOIN pg_namespace n ON c.relnamespace = n.oid) ON a.attrelid = c.oid
            LEFT JOIN pg_description d ON d.objoid = c.oid AND a.attnum = d.objsubid
            LEFT JOIN pg_constraint con ON con.conrelid = c.oid AND (a.attnum = ANY (con.conkey))
            LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum
            LEFT JOIN pg_type t ON a.atttypid = t.oid
            WHERE (c.relkind = ANY (ARRAY ['r'::"char", 'p'::"char"]))
            AND a.attnum > 0
            AND n.nspname = 'public'::name
            ORDER BY c.relname, a.attnum
            ) temp
            WHERE table_name = (#{tableName})
            AND column_type <![CDATA[ <> ]]> '-'
        </if>
    </select>
    <select id="selectGenTableColumnListByTableId" resultMap="BaseResultMap">
        <include refid="selectGenTableColumnVo"/>
        where table_id = #{tableId}
        order by sort
    </select>

    <insert id="insertGenTableColumn" parameterType="com.mall.generator.domain.GenTableColumn" useGeneratedKeys="true" keyProperty="columnId">
        insert into gen_table_column (
        <if test="tableId != null and tableId != ''">table_id,</if>
        <if test="columnName != null and columnName != ''">column_name,</if>
        <if test="columnComment != null and columnComment != ''">column_comment,</if>
        <if test="columnType != null and columnType != ''">column_type,</if>
        <if test="javaType != null and javaType != ''">java_type,</if>
        <if test="javaField != null  and javaField != ''">java_field,</if>
        <if test="isPk != null and isPk != ''">is_pk,</if>
        <if test="isIncrement != null and isIncrement != ''">is_increment,</if>
        <if test="isRequired != null and isRequired != ''">is_required,</if>
        <if test="isInsert != null and isInsert != ''">is_insert,</if>
        <if test="isEdit != null and isEdit != ''">is_edit,</if>
        <if test="isList != null and isList != ''">is_list,</if>
        <if test="isQuery != null and isQuery != ''">is_query,</if>
        <if test="queryType != null and queryType != ''">query_type,</if>
        <if test="htmlType != null and htmlType != ''">html_type,</if>
        <if test="dictType != null and dictType != ''">dict_type,</if>
        <if test="sort != null">sort,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="tableId != null and tableId != ''">#{tableId},</if>
        <if test="columnName != null and columnName != ''">#{columnName},</if>
        <if test="columnComment != null and columnComment != ''">#{columnComment},</if>
        <if test="columnType != null and columnType != ''">#{columnType},</if>
        <if test="javaType != null and javaType != ''">#{javaType},</if>
        <if test="javaField != null and javaField != ''">#{javaField},</if>
        <if test="isPk != null and isPk != ''">#{isPk},</if>
        <if test="isIncrement != null and isIncrement != ''">#{isIncrement},</if>
        <if test="isRequired != null and isRequired != ''">#{isRequired},</if>
        <if test="isInsert != null and isInsert != ''">#{isInsert},</if>
        <if test="isEdit != null and isEdit != ''">#{isEdit},</if>
        <if test="isList != null and isList != ''">#{isList},</if>
        <if test="isQuery != null and isQuery != ''">#{isQuery},</if>
        <if test="queryType != null and queryType != ''">#{queryType},</if>
        <if test="htmlType != null and htmlType != ''">#{htmlType},</if>
        <if test="dictType != null and dictType != ''">#{dictType},</if>
        <if test="sort != null">#{sort},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>
</mapper>
